\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces {\bf A simple network example (coauthorship).} A co-authorship network with an edge between a pair of people if they have written a paper together.}}{2}{figure.1.1}
\contentsline {figure}{\numberline {1.2}{\ignorespaces {\bf Hairball network.} Networks are often noisy data structures and lack an immediate straight forward structural interpretation. \emph {Image from \url {https://cs.umd.edu}.}}}{4}{figure.1.2}
\contentsline {figure}{\numberline {1.3}{\ignorespaces {\bf Network of single cells.} We constructed a network from mass cytometry profiling among 500 cells in single cell dataset. Each cell has 52 measured immune features. In this network, each node is a single cell and is connected to its 5 nearest neighbors.}}{5}{figure.1.3}
\contentsline {figure}{\numberline {1.4}{\ignorespaces {\bf Degree distribution for the single cell network.} We visualize the degree distribution in the single cell network presented in Figure \ref {fig:Cytometry}. {\bf A.} We compute a cumulative distribution plot for degree. {\bf B.} Node degrees can also be visualized with a simple histogram.}}{6}{figure.1.4}
\contentsline {figure}{\numberline {1.5}{\ignorespaces {\bf Centralities on the single cell network.} The second order ego network for the highest centrality nodes in the single cell network according to degree, betweenness, and eigenvector in the left, center, and right plots, respectively. These plots are meant to emphasize how each of these centrality measures prioritizes different kind of stucture.}}{7}{figure.1.5}
\contentsline {figure}{\numberline {1.6}{\ignorespaces {\bf Assortative Community Structure.} This network is an example of assortative community structure, where nodes are tightly connected to each other and more sparsely connected to the rest of the network. Each community is outlined with a pink dotted line.}}{9}{figure.1.6}
\contentsline {figure}{\numberline {1.7}{\ignorespaces {\bf A comparison of $k$-means and the Louvain algorithm on the single cell network.} A comparison of the results of clustering results on the the single cell dataset through $k$-means on the original 52-dimensional data (left) and by the Louvain algorithm on the nearest neighbor network (right). Each of the single cells (or nodes in the nearest neighbor network) is visualized by a 2-dimensional projection frin tSNE. Points are colored by their cluster membership under $k$-means on the original data (left) and Louvain community detection (right). Applying community detection to the nearest neighbor network seems to smooth out the partition and identify some smaller clusters. }}{12}{figure.1.7}
\contentsline {figure}{\numberline {1.8}{\ignorespaces {\bf Directed Acyclic Graph.} A directed acyclic graph (DAG) is formed based on dependency between random variable and allows for a fully factorized probability distribution. Nodes represent random variables and a directed edge from node $i$ to node $j$ indicates that node $j$ depends on node $i$.}}{13}{figure.1.8}
\contentsline {figure}{\numberline {1.9}{\ignorespaces {\bf SBM Graphical Model.} A graphical model is used to model the dependency between the node-to-community assignments, ${\bf z}$ and the observed network adjacency matrix, ${\bf A}$.}}{14}{figure.1.9}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces {\bf Objective of strata multilayer stochastic block model (sMLSBM)}. Each of the $L=9$ networks here represents a layer in a multilayer network. Every network layer has $N=36$ nodes that are consistent across all layers. There are $S=3$ strata as indicated by the three rows and the colors of nodes. Clearly, network layers within a stratum exhibit strong similarities in community structure. That is, although each layer follows an SBM with $K=3$ communities, the SBM parameters are identical for layers within a strata but differ between layers in different strata. We would like to partition the layers into their appropriate strata and learn their associated SBM parameters, $\pi ^s$ and $Z^s$.}}{39}{figure.2.1}
\contentsline {figure}{\numberline {2.2}{\ignorespaces {\bf Schematic illustration of our algorithm}: Our algorithm for fitting an sMLSBM is broken up into two phases: an initialization phase to cluster layers into strata, and an iterative phase that allows learning of node-to-community and layer-to-strata assignments.}}{42}{figure.2.2}
\contentsline {figure}{\numberline {2.3}{\ignorespaces {\bf \noindent Synthetic experiment comparing sMLSBM to other SBMs.} {\bf A}.\nobreakspace {}We specified a model with $S=3$ strata and $L=10$ layers per stratum. A representative layer from each stratum is plotted. Note that nodes in all networks are colored according to their community membership in stratum 1. Each network has $N=128$ nodes, $K=4$ communities and mean degree, $c=20$. The $p_{in}^s$ parameters for $s=1,$ $2$ and 3 are 0.6, 0.4 and 0.25, respectively. Corresponding values of $p_{out}^s$ were selected to maintain the desired expected mean degree, c=20. {\bf B}. We fit 3 types of models to the 30 network layers: i) single SBM: fitting a single SBM to all of the layers; ii) single-Layer SBM: fitting an individual SBM to each layer; and iii) sMLSBM: identifying strata and fitting an SBMs for each strata. Each model yields an estimate $\overline {{\boldsymbol \pi }^{s_l}}$ for the true SBM of each layer $l$, which is denoted ${{\boldsymbol \pi }}^{l}$. Here $s_l$ denotes the inferred strata for layer $l$. On the vertical axis we plot the mean $\ell $2 norm error $||\text {vec}({\boldsymbol \pi ^{l})}-\text {vec}(\overline {{\boldsymbol \pi }^{s_{l}}})||_{2}$. {\bf C}. For each of the three models, we computed the normalized mutual information (NMI) between the true node-to-community assignments ${{\bf z}^{l}}$ and the inferred values $\overline {{\bf z}^{s_l}}$.}}{47}{figure.2.3}
\contentsline {figure}{\numberline {2.4}{\ignorespaces {\bf Synthetic experiment with two strata.} We conducted numerical experiments with multilayer networks with $N=128$ nodes, mean degree $c=16$, $S=2$ strata and $K^1=K^2=4$ communities. The networks contained either $L=10$ (left column) or $L=100$ layers (right column), which were divided equally into the two strata. For stratum 1, we fixed the quantity $N(p_{{in}}^{1}-p_{{out}}^{1})=10$, which fully specifies $(p_{{in}}^{1},p_{{out}}^{1})$ since setting $c=16$ also constrains these parameters. In contrast, we vary $N(p_{{in}}^{2}-p_{{out}}^{2})$. {\bf A}. As a function of $N(p_{{in}}^{2}-p_{{out}}^{2})$, we plot the mean NMI to interpret the ability of sMLSBM to recover the true layer-to-strata assignments. We compare the performance of sMLSBM (purple curve) to generic $k$-means clustering (green symbols) of adjacency matrices. {\bf B.} We plot the mean number of iterations (NOI) required for Phase II of our algorithm to converge. {\bf C.} Finally, we measure the quality of node-to-community assignment results by plotting the mean NMI between the true node-to-community assignments and those inferred with sMLSBM in stratum 1 (red symbols) and stratum 2 (blue symbols).}}{50}{figure.2.4}
\contentsline {figure}{\numberline {2.5}{\ignorespaces {\bf Comparison of sMLSBM on the OTU interaction networks \citep {sparcc} for each of the body sites to a reducibility hierarchy \citep {domen}.} As described in the text, we consider a multiplex network with $L=18$ layers and $N=213$ nodes, which we group here into $S=6$ strata, while the dendrogram was generated by the method employed as the precursor to the reducibility framework. Colored boxes around the leaves of the dendrogram designate the body site to strata assignments obtained with sMLSBM.}}{53}{figure.2.5}
\contentsline {figure}{\numberline {2.6}{\ignorespaces {\bf Visualization of Strata in SparCC Networks.} We visualize the adjacency matrices for SparCC networks that encode microbiome interactions at body sites. In each panel, a colored dot at position $(i,j)$ indicates the existence of an edge $(i,j)$ in the corresponding network layer. The four rows correspond to four different strata. In column 1, we show a sample network generated from the SBM parameters, $\overline {{\boldsymbol \pi }^{s}}$ and $\overline {{\bf Z}^{s}}$, that we inferred for that stratum. In Columns 2 and 3, we show SparCC networks from that particular stratum. Note the strong similarity across each row.}}{55}{figure.2.6}
\contentsline {figure}{\numberline {2.7}{\ignorespaces {\bf Effects of layer aggregation on detectability.} Layer aggregation enhances the detectability of community structure. (a),(b). We plot the detectability limit $\Delta ^{*}$ versus mean edge probability $\rho $ for a single network layer (red dot-dashed curves), the aggregate network obtained by summation (blue dashed curves), and aggregate networks obtained by thresholding this summation at $\mathaccentV {tilde}07E{L} \in \{1,2,3,4\}$ (solid curves). Gold circles and cyan squares highlight $\mathaccentV {tilde}07E{L}=L$ and $\mathaccentV {tilde}07E{L}=1$, which we refer to as AND and OR networks, respectively. Results are shown for $N=10^{4}$ nodes with (a) $L=4$ and (b) $L=16$ layers. (c) For $L=4$, we show $\Delta ^{*}$ versus $\rho $ for the optimal threshold $\mathaccentV {tilde}07E{L}=\ceil *{\rho L}$ (orange triangles), which lies on the solution curves for $\mathaccentV {tilde}07E{L} \in \{1,\dots ,L\}$ (solid curves). (d) We show $\Delta ^{*}$ for $\mathaccentV {tilde}07E{L}=\ceil *{\rho L}$ with $L \in \{4,16\}$. These piecewise-continuous solutions collapse onto the asymptotic solution $\delta _{\text {asym}}^{*}$ (black curve) as $L$ increases. In panels (c), (d), we additionally plot $\delta ^{*}$ for the summation network (blue dashed curves). }}{61}{figure.2.7}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces {\bf Superpixel pre-processing of an image.} An image can be represented by a $1147 \times 1147$ grid of pixels (left). Representing the image with 600 super pixels (right), reduces the size of the image and hence the segmentation problem is to partition the set of 600 super pixels. }}{64}{figure.3.1}
\contentsline {figure}{\numberline {3.2}{\ignorespaces {\bf Defining super nodes}. To define the super node representation of a network, we select $S$ seeds and agglomerate local regions around them to create super nodes. This then leads to a new network with weighted edges between the $S$ super nodes upon which community detection can be more efficiently applied.}}{69}{figure.3.2}
\contentsline {figure}{\numberline {3.3}{\ignorespaces {\bf Choosing seeds in a synthetic network}. The identification of 20 seeds with the CoreHD algorithm in a network generated from a stochastic block model with 8 communities. Seeds (black nodes) are well distributed across communities.}}{71}{figure.3.3}
\contentsline {figure}{\numberline {3.4}{\ignorespaces {\bf Schematic of possible partition comparisons.} We outline the types of possible comparisons between partitions generated according to various combinations of network representation and community detection method. According to these comparison rules, we compute normalized mutual information (NMI) between all pairs of networks satisfying the comparison criteria. The colored circles in the schematic represent a single partition generated under the corresponding network representation and community detection algorithm combination. Circles are colored (in each column) by each of the four possible representation/community detection method combinations. In {\bf A-C}, we outline the types of comparisons we perform in subsequent figures. {\bf A.} To compare the usefulness of the super node representation in identifying communities retrieved using the full network, we compare pairs of networks with different representations under the same community detection algorithm. {\bf B.} Due to the stochastic nature of both the Louvain algorithm and SBM fitting, this comparison seeks to quantify partitions generated under the same network representation and method. {\bf C.} Finally, we consider pairs of partitions generated under the same network representation and different community detection algorithms. }}{75}{figure.3.4}
\contentsline {figure}{\numberline {3.5}{\ignorespaces {\bf Super Node Quality.} We computed normalized mutual information ({\bf A.}) and under segmentation error ({\bf B.}) for networks represented by between 100 and 600 super nodes. Line type and color indicate the community detection algorithm applied (Louvain algorithm or SBM fitting). Each curve indicates the mean across 5 super node representations. The shaded area shows standard deviation. {\bf A.} Normalized mutual information between the full and super node representations of networks [i.e. NMI$({\bf z}^{Full},{\bf z}^{SN})$]. A network representation with more super nodes. generally increases the NMI between full network and super node network representations. Horizontal lines indicate the mean pairwise NMI between 10 runs of the Louvain algorithm and SBM result on the full network (pink and gold, respectively). Given the high variability between multiple runs of the same algorithm on the full network, adding more super nodes can only improve the NMI between the full and super node representation to the observed level of similarity observed between algorithm runs. {\bf B.} The log under segmentation error for super node representations. Defining a super node representation with more super nodes generally decreases the under segmentation error. }}{76}{figure.3.5}
\contentsline {figure}{\numberline {3.6}{\ignorespaces {\bf Runtimes}. We compare community detection runtimes (in seconds) with the Louvain algorithm and by fitting an SBM on the full networks and super node representations for the 9 data sets. {\bf (A.)} Louvain on the full network. {\bf (B.)} Louvain on the super nodes. {\bf (C.)} SBM on the full network. {\bf (D.)} SBM on the super nodes.}}{78}{figure.3.6}
\contentsline {figure}{\numberline {3.7}{\ignorespaces {\bf Quantifying partition variability.} For each of the 9 networks, we obtained 10 different partitions by the Louvain algorithm and 10 different SBM fits under the default ({\bf A.}) and matched settings ({\bf B.}). To assess the similarity between partitions within and between a community detection algorithm in networks under the the super node representation, we computed pairwise normalized mutual information (NMI) as a function of the number of super nodes. The pink and blue curves show the mean pairwise normalized mutual information between all pairs of 10 partitions under Louvain and SBM fitting, respectively. The gold curves compare pairs of partitions under different methods. Shaded area denotes standard deviation. Horizontal lines indicates the mean pairwise NMI between partitions under the full network representation for within Louvain and SBM partition comparison (pink and blue, respectively) and between Louvain and SBM partition comparison (gold). Overall, the super node representation is useful for reducing the disparity between the partitions obtained under different methods.}}{79}{figure.3.7}
\contentsline {figure}{\numberline {3.8}{\ignorespaces {\bf Agreement of community assignments with local connectivity}. We study how consistent partitions are within local neighborhood regions of the network by examining how well a node's neighbors (for various order neighborhoods) can be used to predict its community assignment, under some community partition ${\bf z}$. For each community in a partition, we give a binary prediction of whether a node is assigned to that community, based on probabilities we compute for a node from its neighbors. Sweeping the parameter $p$ that sets the probability required for a node to be assigned to a community, we compute ROC curves for each community and report the minimum AUC value observed. Panels {\bf A-D} show minimum AUC values observed as a function of neighborhood order for communities obtained from the full networks and super node representations by Louvain and by SBM. Line color indicates network and line type indicates communities obtained from the matched and default parameters used by the algorithms on the full networks. Panels {\bf E-H} visualize the communities obtained in the As22 data on the full network (default parameters) and super node representation (SN) under Louvain and SBM, with node colors indicating community memberships. }}{81}{figure.3.8}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces {\bf Modeling community membership in terms of attributes and connectivity}. Node-to-community assignments specified by ${\bf Z}$ are determined in terms of adjacency matrix information, ${\bf A}$ and attribute matrix information, ${\bf X}$. ${\bf A}$ and ${\bf X}$ are assumed by be generated from a stochastic block model and a mixture of multivariate Gaussian distributions, parameterized by ${\boldsymbol \theta }$ and ${\boldsymbol \Psi }$, respectively. }}{87}{figure.4.1}
\contentsline {figure}{\numberline {4.2}{\ignorespaces {\bf Synthetic Example.} We generated a synthetic network with $N=200$ nodes, $K=4$ communities and an 8-dimensional multivariate Gaussian for each community. {\bf A.} A visualization of the adjacency matrix for this network where a black dot indicates an edge. We observe that there is an assortative block structure (blocks on the diagonal), but there are also many edges between communities making the true community structure using only connectivity harder to detect. {\bf B.} We performed PCA on the $N \times p$ attribute array and plotted each of the $N$ nodes in two dimensions. Points are colored by their true community assignments, ${\bf z}$. Clustering the nodes according to only connectivity, only attributes, and with the attributed SBM, we quantified the partition accuracy with normalized mutual information, yielding $\text {NMI}({\bf z},\{{\bf z}^{\text {connectivity}}, {\bf z}^{\text {attributes}},{\bf z}^{\text {attribute sbm}}\})=\{0.65,0.68,0.83\}$.}}{91}{figure.4.2}
\contentsline {figure}{\numberline {4.3}{\ignorespaces {\bf Detectability Analysis in Synthetic Example.} To understand how attribute information can be combined with connectivity to assign nodes to communities accurately, we generated synthetic networks for within-probabilities of $p_{in}$ between 0.05 and 0.3 with corresponding $p_{out}$ or between-community probabilities such that the mean degree of the network was 20. For each of these synthetic networks, we used the attributes from the analysis in figure 2 to fit the attributed SBM. Here, we plot the correctness of the node-to-community assignment with normalized mutual information using the partition obtained from regular SBM (blue) and the partition under the attributed SBM model fit (pink). For each combination of $p_{in}$ and $p_{out}$, we generated 10 networks and hence the bands around the points denote standard deviation. Incorporating attributes with the attributes stochastic block model improves results, particularly near and below the detectability limit, and appears to smooth out the sharp phase transition. }}{92}{figure.4.3}
\contentsline {figure}{\numberline {4.4}{\ignorespaces {\bf Microbiome subject similarity network:} A visualization of the 121 node microbiome subject similarity network with nodes colored by the partition using the classic ({\bf A.}) and attributed ({\bf B.}) stochastic block model. {\bf A.} Fitting the classic stochastic block model to the network, 7 communities were identified. {\bf B.} Fitting the attributed stochastic block model to the network with the attributes being the first 5 principle components of each subject's OTU count vector (metagenomic profile), 6 communities were identified. Incorporating attributes in inferring this partition removed some of the noise in the partition on the network, specifically in the mixed purple community in the left of {\bf A.}}}{97}{figure.4.4}
\contentsline {figure}{\numberline {4.5}{\ignorespaces {\bf Link Prediction on the microbiome subject similarity network:} The results for link prediction on the microbiome subject similarity network for the attributed SBM, Jaccard, Adamic-Adar and preferential attachment methods. The corresponding AUC values for these methods, respectively are, 0.71, 0.69, 0.69, and 0.62.}}{98}{figure.4.5}
\contentsline {figure}{\numberline {4.6}{\ignorespaces {\bf Collaborative Filtering Accuracy in Microbiome Subject Similarity Network}: For each of the 121 nodes, we fit a model to the remaining 120 node network and given the node's closest neighbors (based on network connectivity) sought to predict its 5-dimensional attribute vector. The reported error is the relative error $\mathcal {E}$ between the difference between the true attribute vector (${\bf x}_{i}$) and its predicted attribute vector (${\mathaccentV {hat}05E{\bf x}}_{i}$). The mean error in ${\bf x}_{i}$ is 0.21, as opposed to the neighbor average and weighted neighbor averages, having errors of 0.26 and 0.27, respectively. }}{99}{figure.4.6}
\contentsline {figure}{\numberline {4.7}{\ignorespaces {\bf Protein interaction network.} We visualize the 82 node protein interaction network under the classic stochastic block model {\bf A.} and the attributed stochastic block model {\bf B.} In both networks, nodes are colored by their community assignment and the node shape indicates whether the modification status increased (square) or decreased. {\bf A.} Nodes colored according to the community partition under the stochastic block model. Nodes are assigned to one of five communities. {\bf B.} Nodes are colored to the community partition under one of nine communities.}}{99}{figure.4.7}
\contentsline {figure}{\numberline {4.8}{\ignorespaces {\bf Community entropies in the protein interaction network.} We studied the entropy of the 2 class and 6 class classifications of the nodes in {\bf A.} and {\bf B.}, respectively under the classic SBM (black) and attributed SBM (purple) partitions. For ${\bf A.-B.}$ the horizontal axis denotes the community index for the particular partition. Nodes belonged to 1 of 5 communities under the classic SBM and belong to 1 of 9 communities with the attributed SBM. Incorporating attributes under both classifications succeeds in breaking up a high entropy community (5) from the classic SBM partition to lower entropy communities in the attributed SBM partition. }}{100}{figure.4.8}
\contentsline {figure}{\numberline {4.9}{\ignorespaces {\bf Link Prediction in the protein interaction network}. Performing link prediction using the attributed SBM, Jaccard, Adamic Adar, and preferential attachment. The corresponding AUC curves for these methods were 0.61, 0.58, 0.58, and 0.51, respectively.}}{102}{figure.4.9}
\contentsline {figure}{\numberline {4.10}{\ignorespaces {\bf Collaborative filtering in the protein interaction network}. For each of the 82 nodes, we fit a model to the remaining 81 node network and given the node's closest neighbors (based on network connectivity) sought to predict its 6-dimensional attribute vector. The reported error is the relative error $\mathcal {E}$ between the difference between the true attribute vector (${\bf x}_{i}$) and its predicted attribute vector (${\mathaccentV {hat}05E{\bf x}}_{i}$). The mean error in ${\bf x}_{i}$ using the attributed SBM is 0.21, as opposed to the neighbor average error where it is 0.48. }}{102}{figure.4.10}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces {\bf Overview of the method}. Our test first labels the nodes according to attribute information, $\mathaccentV {tilde}07E{{\bf z}}$. Then in a collection of $T$ trials, a sample of $l$ nodes is treated as labeled, according to $\mathaccentV {tilde}07E{{\bf z}}$. In each trial, a label propagation task is performed to predict the probability distribution over communities for the unlabeled $N-l$ nodes. The entropy of the node-to-community assignment probabilities is used as an estimate of how well the attributes align with connectivity. Also in each trial, $\mathaccentV {tilde}07E{{\bf z}}$ is permuted and subjected to the label propagation task to compute a `null' entropy value. After repeating this process in $T$ trials, the empirical $p$-value is calculated based on the overlap between the null entropy distribution and the empirical entropy distribution.}}{108}{figure.5.1}
\contentsline {figure}{\numberline {5.2}{\ignorespaces {\bf Properties of the empirical $p$-value.} To understand the properties of our empirical $p$-value, we generated a synthetic network, ${\bf A}$ from an SBM with $N=200$ nodes, $K=4$. The vector of continuous attributes for a node $i$, ($X_{i}$) was drawn from a multivariate Gaussian distribution parameterized by its community assignment (${\bf z}$) or $\{{\boldsymbol \mu }_{z_{i}}, {\boldsymbol \Sigma }_{z_{i}}\}$. In these experiments, we permuted varying fractions of $\mathaccentV {tilde}07E{{\bf z}}$ and observed the effects on entropy and empirical $p$-value. {\bf A}. We used tSNE to visualize the two dimensional projection of the 200 nodes. For the most part, members of the same community cluster together. {\bf B.} We plotted the empirical $p$-value as a function of the proportion of labels permuted and observed decreased statistical significance (increased empirical $p$-value) with an increasing proportion of permuted labels. {\bf C.} We plotted the empirical $p$-value as a function of the mean entropy ($\mathcal {E}$) across $T=1000$ trials used to generate the entropy distributions for each experiment. Increased entropy corresponding to a larger proportion of $\mathaccentV {tilde}07E{\bf z}$ permuted leads to a decreased $p$-value.}}{112}{figure.5.2}
\contentsline {figure}{\numberline {5.3}{\ignorespaces {\bf Comparison with BESTest.} We sought to understand the relationship between our empirical $p$-value and that computed according to BESTest. To study this, we used the same experiment described in Figure \ref {Align:Syn1}, where we varied the proportion of permuted labels from $\mathaccentV {tilde}07E{\bf z}$. We denote our empirical $p$-value by `LP empirical $p$-value. {\bf A.} We plotted the BESTest empirical $p$-value against our LP empirical $p$-value. {\bf B.} We plotted the BESTest empirical $p$-value as a function of the BESTest entropy. BESTest gives a significant empirical $p$-value for a much wider range of entropy levels than our test. {\bf C.} The experiments produced a wide range of entropies under BESTest, which are captured by corresponding differences in our empirical $p$-value. {\bf D.} We compared the BESTest approach to computing entropy to our LP method and observed a high correlation between these entropy measures $(r=0.95)$. }}{114}{figure.5.3}
\contentsline {figure}{\numberline {5.4}{\ignorespaces {\bf Analysis of the strength of structural communities.} To understand the effect of network structure on our test, we generated synthetic networks from stochastic block models with various $p_{in}$ (within-community) and $p_{out}$ (between-community) parameters. Networks were generated with $p_{in}$ varying between 0.05 and 0.45 and we chose a corresponding $p_{out}$ such that the mean degree was 30. We used $p_{in}/p_{out}$ as a proxy for the strength of community, with a higher value of this ratio indicating a stronger community structure with more within-community edges and fewer between community edges. For each $p_{in}$, $p_{out}$ combination, we generated 10 synthetic network realizations. {\bf A.} We plotted the relationship between our LP entropy and $p_{in}/p_{out}$. The shaded area denotes standard deviation of the mean entropy over the 10 networks for each $p_{in}$, $p_{out}$ combination. {\bf B.} Similar to ({\bf A.}), we plotted the mean empirical $p$-value over the $T=1000$ trials used to generate the entropy distributions, $\mathcal {E}$ and $\mathcal {E}_{\text {perm}}$. For large $p_{in}/p_{out}$, the empirical $p$-value became more significant. The shaded area denotes standard deviation of empirical $p$-value over the 10 networks for each $p_{in}$, $p_{out}$ combination. {\bf C.} Finally, we plotted the relationship between the mean entropy over the $T$=1000 trials, $\mathcal {E}$ and the empirical $p$-value. These values are strongly correlated with $r=0.91$. }}{115}{figure.5.4}
\contentsline {figure}{\numberline {5.5}{\ignorespaces {\bf Alignment of markers with communities.} We considered each of the possible 51 features in the single cell data and their potential to be used as markers of particular inferred cellular phenotypes. We identified 10 communities (or inferred phenotypes) under the Louvain algorithm, producing a partition of the network, ${\bf z}$. We then created a partition, $\mathaccentV {tilde}07E{\bf z}$ from each attribute in isolation. For each attribute and its induced partition of the nodes, $\mathaccentV {tilde}07E{\bf z}$, normalized mutual information (NMI) was used to measure the discriminative power of the marker in distinguishing network communities, or NMI($ \mathaccentV {tilde}07E{\bf z},{\bf z}$). We expected that our $p$-value should align with this NMI measure in that markers leading to high NMI between the induced $\mathaccentV {tilde}07E{\bf z}$ and ${\bf z}$ should have more significant $p$-values. {\bf A.} We used a histogram to visualize the distribution of NMI values across the 51 possible markers, with many of them leading to low NMI (between 0 and 0.1). {\bf B.} Similar to {\bf A.}, we visualized the empirical $p$-value for the 51 possible markers. {\bf C.} We compared the relationship between the empirical $p$-value (vertical axis) and NMI($ \mathaccentV {tilde}07E{\bf z},{\bf z}$) (horizontal axis) across the 51 possible markers. As expected, we observed these quantities to be anti-correlated in that more significant (lower) empirical $p$-values were obtained for higher values of NMI($ \mathaccentV {tilde}07E{\bf z},{\bf z}$).}}{117}{figure.5.5}
\contentsline {figure}{\numberline {5.6}{\ignorespaces {\bf Validation with a well and poorly aligned markers}. We used two markers with different correlation strength with communities as another validation of the computed entropy under label propagations. First, we defined a labeling of the nodes, $\mathaccentV {tilde}07E{\bf z}$ based on marker (Rh103)Di$<\text {BC103}>$ that did not vary across communities in its expression, and hence not discriminate between the communities. {\bf A.} We visualized the distribution of $\mathcal {E}$ (purple), in comparison to $\mathcal {E}_{\text {perm}}$ (gold). Since this marker has low discriminative power, we expected the shown overlap between $\mathcal {E}$ and $\mathcal {E}_{\text {perm}}$. {\bf B.} We plotted the network of the 1000 single cells and colored nodes by their expression of (Rh103)Di$<\text {BC103}>$, with lighter colors indicating higher expression. It is difficult to notice clustering in this network between cells with similar expression values. {\bf C.} Conversely to the result shown in ({\bf A.}), we chose a marker with high discriminative power, (Nd146)Di$<\text {CD}8>$. Again, we show the distribution of $\mathcal {E}$ (purple), in comparison to $\mathcal {E}_{\text {perm}}$ (gold). Since this marker has good discriminative power, $\mathcal {E}$ and $\mathcal {E}_{\text {perm}}$ do not overlap. {\bf D.} We plotted the network of single cells, with nodes colored according to the intensity of (Nd146)Di$<\text {CD}8>$, with lighter colors indicating higher expression.}}{118}{figure.5.6}
\contentsline {figure}{\numberline {5.7}{\ignorespaces {\bf Variation of markers with significant empirical $p$-values across communities}. We computed the empirical $p$-values induced by the partition $\mathaccentV {tilde}07E{\bf z}$ for each of the 51 markers and looked closely at the top and bottom 5 markers, as inferred through the empirical $p$-value. Since a quality marker in this case is said to be one that induces a labeled of the nodes, $\mathaccentV {tilde}07E{\bf z}$ similar to the result obtained under the Louvain algorithm ${\bf z}$, we expect the expression of such a marker to vary across communities. In this plot, we show the expression of each marker as a function of the community index. The family of orange-colored lines correspond to the top 5 predicted markers (according to empirical $p$-value). From all of these lines, the expression varies across communities. Conversely, we plotted the lowest-ranked markers (in terms of empirical $p$-value and their expression is relatively constant across all communities.}}{120}{figure.5.7}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {6.1}{\ignorespaces {\bf Microbial co-occurence networks for each patient cohort}. We constructed networks with SparCC in the ALI and non-ALI cohort networks (left and right, respectively). Four communities were identified in each network. Nodes are colored by their community assignment.}}{124}{figure.6.1}
\contentsline {figure}{\numberline {6.2}{\ignorespaces {\bf Predictive functions for community classification}. We used a set of 328 filtered functions to predict OTU-to-community assignment in the ALI and No ALI networks. Here we show show the functions identified as the most strong predictors for each community in the ALI and No ALI networks (left and right, respectively). Functions with more discriminative ability in classification from the random forest classifier are ranked higher on the list.}}{127}{figure.6.2}
\addvspace {10\p@ }
